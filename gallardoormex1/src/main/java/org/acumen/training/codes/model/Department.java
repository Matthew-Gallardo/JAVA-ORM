package org.acumen.training.codes.model;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

/**
 * Department generated by hbm2java
 */
@Entity
@Table(name = "department", schema = "public")
public class Department {

	private String deptName;
	private String building;
	private BigDecimal budget;

	private Set<Course> courses = new HashSet<>();
	private Set<Student> students = new HashSet<>();
	private Set<Instructor> instructors = new HashSet<>();

	public Department() {
	}

	public Department(String deptName) {
		this.deptName = deptName;
	}

	public Department(String deptName, String building, BigDecimal budget, Set<Course> courses, Set<Student> students,
			Set<Instructor> instructors) {
		this.deptName = deptName;
		this.building = building;
		this.budget = budget;
		this.courses = courses;
		this.students = students;
		this.instructors = instructors;
	}

	@Id
	@Column(name = "dept_name", unique = true, nullable = false, length = 20)
	public String getDeptName() {
		return this.deptName;
	}

	public void setDeptName(String deptName) {
		this.deptName = deptName;
	}

	@Column(name = "building", length = 15)
	public String getBuilding() {
		return this.building;
	}

	public void setBuilding(String building) {
		this.building = building;
	}

	@Column(name = "budget", precision = 12)
	public BigDecimal getBudget() {
		return this.budget;
	}

	public void setBudget(BigDecimal budget) {
		this.budget = budget;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "department")
	public Set<Course> getCourses() {
		return this.courses;
	}

	public void setCourses(Set<Course> courses) {
		this.courses = courses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "department")
	public Set<Student> getStudents() {
		return this.students;
	}

	public void setStudents(Set<Student> students) {
		this.students = students;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "department")
	public Set<Instructor> getInstructors() {
		return this.instructors;
	}

	public void setInstructors(Set<Instructor> instructors) {
		this.instructors = instructors;
	}
}
